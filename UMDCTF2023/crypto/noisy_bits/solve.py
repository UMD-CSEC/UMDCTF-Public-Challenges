POLY = 0xC75


codewords = [0b01011100111010101110100,0b10111111010110100001100,0b00011010110011000110100,0b10000000111010101100110,0b10111011111000110110110,0b00001000110111100110000,0b10000010101001110010011,0b11001001000010101110001,0b10011100110010111010010,0b11100110111011101101010,0b01111111110001101001110,0b00000001011111001101100,0b10101101111000110110110,0b11011001100010000011101,0b10011100111011111010010,0b11001011100010101110010,0b11110001101000100110001,0b01111010100111110101100,0b00101001110001000000111,0b11101100000000001111111,0b11000010011010000000101,0b10101110001111100110000,0b10111111110011100000011,0b01101010101000001100010,0b01101011100000011000110,0b00101010010000101001101,0b11111011011010011110011,0b11100100100110001011110,0b10110111101011101010111,0b11010010000110100001010]

def golay(cw):
    cw = (cw & 0xfff)
    c = cw
    for i in range(1, 12+1):
        if cw & 1 != 0:
            cw = cw ^ POLY
        cw = cw >> 1

    return (cw << 12) | c

def hamming_dist(x, y):
    s1 = bin(x)[2:].zfill(23)
    s2 = bin(y)[2:].zfill(23)
    return sum(c1 != c2 for c1, c2 in zip(s1, s2))

valid_words = {}

for i in range(0, 2**12):
    valid_words[golay(i)] = i

# This is highly inefficient, but it works.
for cw in codewords:
    for k in valid_words.keys():
        if hamming_dist(cw, k) <= 3:
            print(bin(valid_words[k])[2:].zfill(12))
